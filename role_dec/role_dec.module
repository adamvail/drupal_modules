<?php

/**
* @file
* Overides the registration process and adds fields that 
* allow a user to define whether they are an athlete or coach
* as well as affiliate with a gym of their choosing.
*/

/**
* Implements hook_form_alter().
*
*/

function role_dec_form_alter(&$form, &$form_state, $form_id) {
	// check to see if the form is the user registration or user profile form
	// if not then return and don’t do anything
	if (!($form_id == 'user_register_form' || $form_id == 'user_profile_form')) {
		return;
	}
	
	$require_field = FALSE;
	
	if($form_id == 'user_register_form') {
		$require_field = TRUE;
	}
		$form['account']['disp_name'] = array(
			'#type' => 'textfield',
			'#title' => t('Display Name'),
			'#description' => t('Enter your name as you want it to appear in your profile on the homepage. (e.g. John Smith)'),
			'#size' => 31,
			'#maxlength' => 50,
			'#required' => $require_field,
			'#weight' => 0,
		);

	$form['account']['role_dec'] = array(
		'#type' => 'fieldset',
		'#title' => t('User Role Decision'),
	);

	$form['account']['role_dec']['role'] = array(
		'#type' => 'radios',
		'#options' => array(
			'coach' => t('Coach'), 			
			'athlete' => t('Athlete'),						
		),
		'#description' => t('Choose whether you are a Coach or Athlete'),
		'#required' => $require_field,
	);
	
	$form['account']['affiliation_dec_coach'] = array(
		'#type' => 'fieldset',
		'#title' => t('Gym Affiliation'),
		'#states' => array(
			'visible' => array(
				':input[name="role"]' => array('value' => 'coach'),
			),
		),
	);
	
	$form['account']['affiliation_dec_coach']['coach_gym'] = array(
		'#type' => 'textfield',
		'#description' => t('Please enter the name of your gym.'),
		'#size' => 15,
		'#maxlength' => 50,
	);
	
	$form['account']['affiliation_dec_athlete'] = array(
		'#type' => 'fieldset',
		'#title' => t('Gym Affiliation'),
		'#states' => array(
			'visible' => array(
				':input[name="role"]' => array('value' => 'athlete'),
			),
		),
	);
	
	$form['account']['affiliation_dec_athlete']['athlete_gym'] = array(
		'#type' => 'radios',
		'#options' => array(
			'select_gym' => t('Select Gym'), 			
			'new_gym' => t('Enter Gym'),						
		),
		'#description' => t('Select gym or enter new gym if yours does not exist.'),
	);
	
	//grab all the unique gym names to populate the select dropdown
	//$result = db_query('SELECT DISTINCT gym FROM {workout_gym_affiliation}');
	$result = db_select('workout_gym_affiliation', 'a')
		->fields('a', array('gym'))
		->condition('gym', '', '!=')
		->distinct()
		->execute()
		->fetchAll();

	$options = array();
	$i = 0;
	foreach($result as $row){
		$options[$i] = $row->gym;
		$i++;
	}
	
	$form['account']['affiliation_dec_athlete']['choose_gym'] = array(
		'#type' => 'select',
		'#description' => t('Select gym.'),
		'#options' => $options,
		'#states' => array(
			'visible' => array(
				':input[name="athlete_gym"]' => array('value' => 'select_gym'),
			),
		),
	);
	
	$form['account']['affiliation_dec_athlete']['enter_gym'] = array(
		'#type' => 'textfield',
		'#description' => t('Please enter the name of your gym.'),
		'#size' => 15,
		'#maxlength' => 50,
		'#states' => array(
			'visible' => array(
				':input[name="athlete_gym"]' => array('value' => 'new_gym'),
			),
		),
	);
	
	//drupal_set_message('<pre>' . print_r($form, TRUE) . '</pre>');
	
	//do validation of the registration information
	$form['account']['affiliation_dec_coach']['coach_gym']['#element_validate'] = array('_role_dec_coach_validate');
	$form['account']['affiliation_dec_athlete']['athlete_gym']['#element_validate'] = array('_role_dec_athlete_validate');
}

//gym validation for a coach
function _role_dec_coach_validate($form, &$form_state) {

	//drupal_set_message('<pre>' . print_r($form_state, TRUE) . '</pre>');
	
	if($form_state['values']['role'] == 'coach' && $form_state['values']['coach_gym'] == NULL) {
		form_set_error('coach_gym', t('Enter a gym name in the text box under the Gym Affiliation section.'));
	}
}

//gym validation for an athlete
function _role_dec_athlete_validate($form, &$form_state) {

	//drupal_set_message('<pre>' . print_r($form_state, TRUE) . '</pre>');
	
	if($form_state['values']['role'] == 'athlete' && $form_state['values']['athlete_gym'] == NULL) {
		form_set_error('athlete_gym', t('Choose whether to select an existing gym or enter the name of a new one under the User Role Decision section.'));
	}
	
	if($form_state['values']['role'] == 'athlete' && $form_state['values']['athlete_gym'] == 'select_gym' && $form_state['values']['choose_gym'] == 0) {
		form_set_error('choose_gym', t('Select one of the gyms from the drop down list under the Gym Affiliation section.'));
	}
	
	if($form_state['values']['role'] == 'athlete' && $form_state['values']['athlete_gym'] == 'new_gym' && $form_state['values']['enter_gym'] == NULL) {
		form_set_error('choose_gym', t('Enter a gym name in the text box under the Gym Affiliation section.'));
	}
}

//input the gym affiliation data upon account creation
function role_dec_user_insert(&$edit, $account, $category){

	$table = 'workout_gym_affiliation';
	$record = new stdClass();
	
	//drupal_set_message('<pre>' . print_r($edit, TRUE) . '</pre>');
	//drupal_set_message('<pre>' . print_r($account, TRUE) . '</pre>');
	//drupal_set_message('<pre>' . print_r($category, TRUE) . '</pre>');
	
	//write to the gym affilitation table
	$record->uid = $account->uid;
	$record->name = strtolower($account->disp_name);
	$record->role = $account->role;
	
	//grab all the unique gym names
	$result = db_query('SELECT DISTINCT gym FROM {workout_gym_affiliation}');
	$i = 0;
	$gym = NULL;
	foreach($result as $row){
		if($i == $account->choose_gym){
			$gym = $row->gym;
		}
		$i++;
	}
	
	if($account->role == 'coach') {
		$record->gym = strtolower($account->coach_gym);
	}
	elseif($account->role == 'athlete') {
		if($account->athlete_gym == 'select_gym') {
			$record->gym = strtolower($gym);
		}
		elseif($account->athlete_gym == 'new_gym') {
			$record->gym = strtolower($account->enter_gym);
		}
	
	}

	drupal_write_record($table, $record);
	
	//add coach or athlete to user role table
	$table = 'users_roles';
	$record = new stdClass();
	
	$result = db_query('SELECT * FROM {role}');
	foreach($result as $row){
		if($row->name == $account->role){
			$record->uid = $account->uid;
			$record->rid = $row->rid;
		}
	}
	
	drupal_write_record($table, $record);
}

//update the gym affiliation information
function role_dec_user_update(&$edit, $account, $category) {
	
	//drupal_set_message('<pre>' . print_r($edit, TRUE) . '</pre>');
	//drupal_set_message('<pre>' . print_r($account, TRUE) . '</pre>');
	//drupal_set_message('<pre>' . print_r($category, TRUE) . '</pre>');
	
	//update user display name
	if($account->disp_name != NULL) {
		db_update('workout_gym_affiliation')
			->fields(array(
				'name' => strtolower($account->disp_name),
			))
			->condition('uid',$account->uid)
			->execute();
	}
	
	//update user display name
	if($account->role != NULL) {
		db_update('workout_gym_affiliation')
			->fields(array(
				'role' => $account->role,
			))
			->condition('uid',$account->uid)
			->execute();
	}

	//grab all the unique gym names
	$result = db_query('SELECT DISTINCT gym FROM {workout_gym_affiliation}');
	$i = 0;
	$gym = NULL;
	foreach($result as $row){
		if($i == $account->choose_gym){
			$gym = $row->gym;
		}
		$i++;
	}
	
	//update gym for a coach
	if($account->role == 'coach' && $account->coach_gym != NULL) {
		db_update('workout_gym_affiliation')
			->fields(array(
				'gym' => strtolower($account->coach_gym),
			))
			->condition('uid',$account->uid)
			->execute();
	}
	elseif($account->role == 'athlete') {
		if($account->athlete_gym == 'select_gym') {
			db_update('workout_gym_affiliation')
				->fields(array(
					'gym' => strtolower($gym),
				))
				->condition('uid',$account->uid)
				->execute();
		}
		elseif($account->athlete_gym == 'new_gym') {
			db_update('workout_gym_affiliation')
				->fields(array(
					'gym' => strtolower($account->enter_gym),
				))
				->condition('uid',$account->uid)
				->execute();
		}
	}
	
	//update users_roles table
	if($account->role != NULL) {
		
		$result = db_query('SELECT * FROM {role}');
		foreach($result as $row){
			if($row->name == $account->role){
				db_update('users_roles')
					->fields(array(
						'rid' => $row->rid,
					))
					->condition('uid',$account->uid)
					->execute();
			}
		}
	}
}

//delete gym affiliation information upon user cancellation
function role_dec_user_cancel($edit, $account, $method) {
	//Do nothing at the moment				
}

//delete gym affiliation information upon user cancellation
function role_dec_user_delete($account) {
	
	//delete the user row from affiliation table
	db_delete('workout_gym_affiliation')
		->condition('uid',$account->uid)
		->execute();

	//delete user row from role table
	db_delete('users_roles')
		->condition('uid',$account->uid)
		->execute();				
}
